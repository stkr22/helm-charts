importer:
  image:
    repository: "fireflyiii/data-importer"
    pullPolicy: IfNotPresent
    tag: ""
  accessToken: ""
  frontendUrl: ""
  vanity_url: ""
  env: []
  resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi
  ingress:
    enabled: false
    className: ""
    annotations: {}
      # kubernetes.io/ingress.class: nginx
      # kubernetes.io/tls-acme: "true"
    hosts:
      - host: myapp.local
        paths:
          - path: /
            pathType: Prefix
    tls: []

postgres:
  image:
    repository: postgres
    tag: 14.2-alpine
    pullPolicy: IfNotPresent
  existingSecret: ""
  env: []
  resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi
  persistence:
    enabled: true
    existingClaim: ""
    size: 1Gi
    accessMode: ReadWriteOnce
    backup:
      enabled: false
      minioHostname: ""
      minioBucketName: ""
      existingSecretMinio: ""

frontend:
  image:
    repository: "fireflyiii/core"
    tag: "latest"
    pullPolicy: IfNotPresent
  env: []
  existingSecret: ""
  persistence:
    enabled: true
    existingClaim: ""
    size: 2Gi
    accessMode: ReadWriteOnce
  resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi
  ingress:
    enabled: false
    className: ""
    annotations: {}
      # kubernetes.io/ingress.class: nginx
      # kubernetes.io/tls-acme: "true"
    hosts:
      - host: myapp.local
        paths:
          - path: /
            pathType: Prefix
    tls: []
  cronjob:
    enabled: true
    annotations: {}
    image:
      repository: curlimages/curl
      pullPolicy: IfNotPresent
      tag: 7.81.0
    imagePullSecrets: []
    podAnnotations: {}
    securityContext: {}
    podSecurityContext: {}
    resources: {}
    nodeSelector: {}
    tolerations: []
    affinity: {}

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: myapp.local
      paths:
        - path: /
          pathType: Prefix
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

nodeSelector: {}

tolerations: []

affinity: {}
