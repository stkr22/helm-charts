apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "pigallery2.fullname" . }}
  labels:
    {{- include "pigallery2.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  strategy:
    type: Recreate
  selector:
    matchLabels:
      {{- include "pigallery2.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "pigallery2.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.pigallery2.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "pigallery2.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: pigallery2
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.pigallery2.image.repository }}:{{ .Values.pigallery2.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.pigallery2.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          env:
            - name: NODE_ENV
              value: production
            - name: Server-Database-type
              value: mysql
            - name: Server-port
              value: "8080"
            - name: MYSQL_HOST
              value: "{{ template "pigallery2.fullname" . }}-db"
            - name: MYSQL_DATABASE
              value: pigallery2
            - name: MYSQL_PASSWORD
              valueFrom:
                secretKeyRef:
                  {{- if .Values.db.existingSecret }}
                  name: {{ .Values.db.existingSecret }}
                  {{- else }}
                  name: {{ template "pigallery2.fullname" . }}
                  {{- end }}
                  key: mysql-password
            - name: MYSQL_USER
              valueFrom:
                secretKeyRef:
                  {{- if .Values.db.existingSecret }}
                  name: {{ .Values.db.existingSecret }}
                  {{- else }}
                  name: {{ template "pigallery2.fullname" . }}
                  {{- end }}
                  key: mysql-username
            {{- with .Values.pigallery2.env }}
              {{- toYaml . | nindent 12 }}
            {{- end }}
          livenessProbe:
            httpGet:
              path: /heartbeat
              port: http
            initialDelaySeconds: 60
            failureThreshold: 3
            periodSeconds: 40
          readinessProbe:
            httpGet:
              path: /heartbeat
              port: http
            initialDelaySeconds: 60
            failureThreshold: 3
            periodSeconds: 40
          volumeMounts:
            - name: config
              mountPath: /app/data/
            - name: media
              mountPath: /app/data/images
              readOnly: true
          resources:
            {{- toYaml .Values.pigallery2.resources | nindent 12 }}
      volumes:
        - name: config
          {{- if .Values.pigallery2.persistence.enabled }}
          persistentVolumeClaim:
            claimName: {{ include "pigallery2.fullname" . }}-config
          {{- else if not .Values.pigallery2.persistence.enabled }}
          emptyDir: {}
          {{- end }}
        - name: media
          {{- if .Values.pigallery2.persistence.enabled }}
          persistentVolumeClaim:
            claimName: {{ include "pigallery2.fullname" . }}-media
          {{- else if not .Values.pigallery2.persistence.enabled }}
          emptyDir: {}
          {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
