apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "zigbee2mqtt.fullname" . }}
  labels:
    app.kubernetes.io/name: {{ include "zigbee2mqtt.fullname" . }}
    chart: "{{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}"
spec:
  replicas: {{ .Values.replicaCount }}
  strategy:
    type: Recreate
  selector:
    matchLabels:
      {{- include "zigbee2mqtt.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "zigbee2mqtt.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: zigbee2mqtt
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          env:
            {{- if .Values.persistence.enabled }}
            - name: ZIGBEE2MQTT_DATA
              value: {{ .Values.persistence.mountPath }}
            {{- end }}
            - name: ZIGBEE2MQTT_CONFIG_FRONTEND_PORT
              value: "8080"
            - name: ZIGBEE2MQTT_CONFIG_MQTT_SERVER
            {{- if .Values.mosquitto.enabled }}
              value: "mqtt://{{ .Release.Name }}-mosquitto.{{ .Release.Namespace }}.svc.{{ .Values.clusterDomain }}"
            {{- else if ne .Values.mosquitto.serviceFqdn "" }}
              value: "{{ .Values.mosquitto.serviceFqdn }}"
            {{- end }}
            {{- with .Values.env }}
              {{- toYaml . | nindent 12 }}
            {{- end }}
          volumeMounts:
            - name: config-data
              mountPath: {{ .Values.persistence.mountPath }}
            {{- if .Values.usb.enabled }}
            - name: usb
              mountPath: /dev/ttyACM0
            - name: udev
              mountPath: /run/udev
            {{- end }}
          livenessProbe:
            httpGet:
              port: http
            initialDelaySeconds: 30
            failureThreshold: 3
            periodSeconds: 60
          readinessProbe:
            httpGet:
              port: http
            initialDelaySeconds: 15
            failureThreshold: 3
            periodSeconds: 30
          startupProbe:
            tcpSocket:
              port: http
            initialDelaySeconds: 0
            failureThreshold: 30
            periodSeconds: 5
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      volumes:
        - name: config-data
          {{- if .Values.persistence.enabled }}
          persistentVolumeClaim:
            claimName: {{ include "zigbee2mqtt.fullname" . }}
          {{- else }}
          emptyDir: {}
          {{- end }}
        {{- if .Values.usb.enabled }}
        - name: usb
          hostPath:
            type: CharDevice
            path: {{ .Values.usb.hostPath }}
        - name: udev
          hostPath:
            path: /run/udev
        {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
