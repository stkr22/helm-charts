apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "fullstack.fullname" . }}-backend
  labels:
    {{- include "fullstack.backend.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  strategy:
    type: Recreate
  selector:
    matchLabels:
      {{- include "fullstack.backend.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "fullstack.backend.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "fullstack.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ include "fullstack.fullname" . }}-backend
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.backend.image.repository }}:{{ .Values.backend.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.backend.image.pullPolicy }}
          ports:
            - name: api
              containerPort: 8000
              protocol: TCP
          env:
            - name: GENERATE_TEST_DATA
              value: "False"
            - name: POSTGRES_DB
              value: backend
            - name: POSTGRES_SERVER
              value: {{ include "fullstack.fullname" . }}-db:5432
            - name: POSTGRES_PASSWORD
              {{- if .Values.postgres.existingSecret }}
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.postgres.existingSecret }}
                  key: postgresql-password
              {{- else }}
              value: {{ template "fullstack.postgres.password" . }}
              {{- end }}
            - name: POSTGRES_USER
              {{- if .Values.postgres.existingSecret }}
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.postgres.existingSecret }}
                  key: postgresql-username
              {{- else }}
              value: {{ template "fullstack.postgres.user" . }}
              {{- end }}
            {{- with .Values.backend.env }}
              {{- toYaml . | nindent 12 }}
            {{- end }}
          livenessProbe:
            httpGet:
              path: /docs
              port: api
            initialDelaySeconds: 120
            failureThreshold: 3
            timeoutSeconds: 1
            periodSeconds: 60
          readinessProbe:
            httpGet:
              path: /docs
              port: api
            initialDelaySeconds: 120
            failureThreshold: 3
            timeoutSeconds: 1
            periodSeconds: 60
          resources:
            {{- toYaml .Values.backend.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
