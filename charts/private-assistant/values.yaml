clusterDomain: "cluster.local"


globalEnv:
  - name: TZ
    value: Europe/Berlin


coordinator:
  image:
    repository: ghcr.io/stkr22/private-assistant-skill-coordinator-py
    pullPolicy: IfNotPresent
    tag: "0.1.6"
    pullSecret: ""
  config: |
    client_id: "skill_coordinator"
  resources: {}

intentEngine:
  image:
    repository: ghcr.io/stkr22/private-assistant-skill-intent-engine-py
    pullPolicy: IfNotPresent
    tag: "0.0.2"
    pullSecret: ""
  config: |
    client_id: "intent_engine"
  resources: {}

skills:
  activeSkills: []
    # - name: "curtain-skill"
    #   image:
    #     repository: "ghcr.io/stkr22/private-assistant-curtain-skill-py"
    #     pullPolicy: IfNotPresent
    #     tag: "0.1.4"
    #   configSecretName: MySecret
    #   resources: {}

nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}
podLabels: {}

podSecurityContext:
  fsGroup: 1000
  fsGroupChangePolicy: OnRootMismatch
  supplementalGroups:
    - 1000

securityContext:
  capabilities:
    drop:
      - ALL
  runAsUser: 1000
  runAsGroup: 1000
  runAsNonRoot: true
  readOnlyRootFilesystem: true
  allowPrivilegeEscalation: false
  privileged: false
  seccompProfile:
    type: RuntimeDefault

mosquitto:
  enabled: true
  nodeport:
    enabled: true

postgresql:
  enabled: true
  global:
    postgresql:
      auth:
        username: assistant
        database: assistant
        password: assistant
        postgresPassword: postgres

# Additional volumes on the output Deployment definition.
volumes: []

# Additional volumeMounts on the output Deployment definition.
volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

nodeSelector: {}

tolerations: []

affinity: {}
